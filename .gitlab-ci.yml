stages:
  - test

variables:
  GCR_PROJECT_ID: xpring-dev-sandbox
  GCLOUD_PROJECT_ID: xpring-dev-sandbox
  CLUSTER_NAME: poc1-cluster
  CLUSTER_REGION: us-central1
  RELEASE_NAME: spsp-server
  RELEASE_ENV: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME

include:
  - project: 'xpring/xpring-ci-templates'
    file: '/templates/build_for_gcr.yml'

test:
  image: circleci/openjdk:8-jdk
  stage: test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - ~/.m2
    policy: pull
  variables:
    MAVEN_OPTS: -Xmx4096m
    JAVA_HOME: /usr/lib/jvm/jdk1.8.0/
  before_script:
    - curl -L --cookie 'oraclelicense=accept-securebackup-cookie;'  http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip -o /tmp/jce_policy.zip
    - unzip -o /tmp/jce_policy.zip -d /tmp
    - sudo mv -f /tmp/UnlimitedJCEPolicyJDK8/US_export_policy.jar $JAVA_HOME/jre/lib/security/US_export_policy.jar
    - sudo mv -f /tmp/UnlimitedJCEPolicyJDK8/local_policy.jar $JAVA_HOME/jre/lib/security/local_policy.jar
  script:
    - mvn dependency:go-offline -DskipITs install
  # after_script:
  #   - mkdir -p ~/junit/ && find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
  #   - mkdir -p ~/checkstyle/ && find . -type f -regex ".*/target/checkstyle-reports/.*xml" -exec cp {} ~/junit/ \;
  artifacts:
    reports:
      junit: 
        - .*/target/surefire-reports/.*xml
        - .*/target/checkstyle-reports/.*xml

# This is a template that is used below. It does not do anything by itself
.deploy_wallet:
  extends: .deploy
  when: manual
  before_script:
    - echo "$GCP_SA" > account.json
    - gcloud auth activate-service-account --key-file account.json
    - gcloud config set project $GCLOUD_PROJECT_ID
    - gcloud container clusters get-credentials $CLUSTER_NAME --region $CLUSTER_REGION
    - mkdir /kaniko
    - export GOOGLE_APPLICATION_CREDENTIALS=/kaniko/kaniko-secret.json
    - echo $GCP_SA > $GOOGLE_APPLICATION_CREDENTIALS
    - export IMAGE_UID=$(echo -n "$(date +%s)-${CI_COMMIT_SHORT_SHA}-${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}" | tr -d ' ')
    - /usr/local/bin/executor
        --context $CI_PROJECT_DIR
        --dockerfile $CI_PROJECT_DIR/Dockerfile
        --destination gcr.io/$GCLOUD_PROJECT_ID/$CI_PROJECT_NAME:latest
        --destination gcr.io/$GCLOUD_PROJECT_ID/$CI_PROJECT_NAME:$IMAGE_UID
  script:
    - HELM_ARGS=$(echo "${WALLET_CONFIG}" | while read line; do echo -n "--set $line "; done)
    - helm upgrade --install --namespace default ${HELM_ARGS} --set releaseEnv=$RELEASE_ENV --set releaseImage="gcr.io/$GCR_PROJECT_ID/$CI_PROJECT_NAME:$IMAGE_UID" ${RELEASE_NAME}-${RELEASE_ENV} ./charts


deploy to dev:
  stage: deploy
  extends: .deploy_wallet
  variables:
    RELEASE_ENV: dev
    WALLET_CONFIG: $WALLET_CONFIG_DEV

deploy to stage:
  stage: deploy
  extends: .deploy_wallet
  variables:
    RELEASE_ENV: stg
    WALLET_CONFIG: $WALLET_CONFIG_STG

deploy to prod:
  stage: deploy
  extends: .deploy_wallet
  variables:
    RELEASE_ENV: prod
    WALLET_CONFIG: $WALLET_CONFIG_PRD
    GCLOUD_PROJECT_ID: xpring-testnet
    CLUSTER_NAME: xpring-testnet-cluster01
    CLUSTER_REGION: us-west1
